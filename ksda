
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
 
typedef struct student{
    char *ime;
    char *prezime;
    int id;
    struct student* next;
}STUDENT;
 
void unosImenaPrezime(char **ime, char **prezime){
    *ime = (char*)malloc(50*sizeof(char));
    *prezime = (char*)malloc(50*sizeof(char));
    printf("Unesite ime: ");
    scanf("%s", *ime);
    printf("Unesite prezime: ");
    scanf("%s", *prezime);
}
 
int main(){
    FILE *fp;
    fp = fopen("studenti.txt", "r");
    if(fp == NULL){
        printf("Datoteka nije otvorena.");
        return 0;
    }
 
    STUDENT *head = NULL;
 
    for(int i=0; i<4; i++){
        STUDENT *newStudent = (STUDENT*)malloc(sizeof(STUDENT));
        newStudent->next = head;
        head = newStudent;
 
        char *ime, *prezime;
 
        printf("Unesite ID studenta: ");
        scanf("%d", &newStudent->id);
        unosImenaPrezime(&ime, &prezime);    
 
 
        newStudent->ime = ime;
        newStudent->prezime = prezime;
 
        fscanf(fp, "%d", &newStudent->id);
 
        printf("\n");
    }
 
    STUDENT *current = head;
 
    while(current != NULL){
        printf("%s %s %d\n", current->ime, current->prezime, current->id);
        current = current->next;
    }
 
    int count = 0;
 
    current = head;
 
    while(current != NULL){
        count++;
        current = current->next;
    }
 
    printf("\nBroj elemenata: %d\n\n", count);
 
    int idToDelete;
 
    printf("Unesite ID studenta kojeg želite izbrisati: ");
 
    scanf("%d", &idToDelete);
 
    if(head == NULL){
        printf("Popis je prazan.");
        return 0;
    }
 
    if(head->id == idToDelete){
        STUDENT *temp = head;
        head = head->next;
        free(temp);
 
        printf("\nStudent je uspješno izbrisan.\n\n");
 
        current = head;
 
        while(current != NULL){
            printf("%s %s %d\n", current->ime, current->prezime, current->id);
            current = current->next;
        }
 
        count = 0;
 
        current = head;
 
        while(current != NULL){
            count++;
            current = current->next;
        }
 
        printf("\nBroj elemenata: %d\n\n", count);
 
        return 0;   
 
    }else{
 
        STUDENT *prev = head;
 
        while(prev->next != NULL && prev->next->id != idToDelete){
            prev = prev->next;
        }
 
        if(prev->next == NULL){
            printf("Student nije pronađen.");
            return 0;   
 
        }else{
 
            STUDENT *temp = prev->next;
            prev->next = temp->next;
            free(temp);
 
            printf("\nStudent je uspješno izbrisan.\n\n");
 
            current = head;
 
            while(current != NULL){
                printf("%s %s %d\n", current->ime, current->prezime, current->id);
                current = current->next;
            }
 
            count = 0;
 
            current = head;
 
            while(current != NULL){
                count++;
                current = current->next;
            }
 
            printf("\nBroj elemenata: %d\n\n", count);
 
            return 0;
 
        }
 
    }
 
    return 0;
 
}
